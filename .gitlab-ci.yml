image: 'node:12.13'
variables:
  DOCKER_HOST: 'tcp://localhost:2375'
  DOCKER_TLS_CERTDIR: ''
stages:
  - install_dependencies
  - tests_bundle
  - release
install_dependencies:
  tags:
    - golang
    - linux
  stage: install_dependencies
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/
lint:
  tags:
    - golang
    - linux
  stage: tests_bundle
  script:
    - >-
      set CI=true && npx eslint -c config/linters/.eslintrc.js src/ --ext
      .ts,.js,.tsx --fix && npx stylelint --fix --max-warnings=0
      "src/**/*.{modules.scss,scss,css}" --config config/linters/.stylelintrc.js
test:
  tags:
    - golang
    - linux
  stage: tests_bundle
  script:
    - set CI=true && npx jest --config ./config/jest/jest.config.js
build:
  tags:
    - golang
    - linux
  stage: tests_bundle
  script:
    - >-
      set CI=true && npx cross-env NODE_ENV=production PUBLIC_URL=/ npx
      react-app-rewired build
  artifacts:
    paths:
      - build/
release:
  tags:
    - golang
    - linux
  stage: release
  image: >-
    git.wildberries.ru:4567/infrastructure/deploy-service/deploy-service/client:latest
  services:
    - 'docker:dind'
  only:
    - tags
    - '/^v\d+\.\d+\.\d+(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$/'
  except:
    - branches
  script:
    - apk add --no-cache make docker
    - echo "Release version $CI_COMMIT_TAG"
    - export DEBUG=true
    - deploy-service-client -c deploy-service-client.conf.yaml
before_script:
  - export SERVICE="test"
  - export IMAGE_NAME="$CI_REGISTRY_IMAGE/$SERVICE"
